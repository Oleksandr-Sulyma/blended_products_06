{"version":3,"file":"index.js","sources":["../src/js/constants.js","../src/js/products-api.js","../src/js/refs.js","../src/js/render-function.js","../src/home.js"],"sourcesContent":["export const limit = 12; // кількість продуктів на сторінку\nexport let currentPage = 1; // поточна сторінка  \n","import axios, { Axios } from 'axios';\nimport { limit, currentPage } from './constants.js';\n// API ендпоінт №1: базовий URL\nconst requestDummy = axios.create({\n  baseURL: 'https://dummyjson.com/products',\n});\n\n// API ендпоінт №2: функция getAllProducts(). Не приймає параметри, повертає проміс з даними (всі продукти з пагінацією)\nexport const getAllProducts = async (currentPage = 1) => {\n  try {\n    const response = await requestDummy.get(\n      `?limit=${limit}&skip=${\n        (currentPage - 1) * limit\n      }&select=id,thumbnail,title,brand,category,price`\n    );\n    return response.data.products;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// API ендпоінт №3: функція getProductById(id). Приймає id продукту, повертає проміс з даними (один продукт по ID)\nexport const getProductById = async id => {\n  try {\n    const response = await requestDummy.get(\n      `/${id}?select=id,thumbnail,title,tags,description,warrantyInformation,returnPolicy,price`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// API ендпоінт №4: функція searchProducts(query). Приймає рядок пошукового запиту, повертає проміс з даними (список товарів,\n// що відповідають пошуковому запиту)\nexport const searchProducts = async (query, currentPage = 1) => {\n  try {\n    const response = await requestDummy.get(\n      `/search?q=${query}&limit=${limit}&skip=${\n        (currentPage - 1) * limit\n      }&select=id,thumbnail,title,brand,category,price`\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// API ендпоінт №5: функція getCategoryList(). Не приймає параметри, повертає проміс з даними (список категорій прoдуктів)\nexport const getCategoryList = async () => {\n  try {\n    const response = await requestDummy.get('/category-list');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// API ендпоінт №6: функція getProductsByCategory(category). Приймає назву категорії, повертає проміс з даними (список\n// продуктів у вказаній категорії)\nexport const getProductsByCategory = async (category, currentPage = 1) => {\n  try {\n    const response = await requestDummy.get(\n      `/category/${category}?limit=${limit}&skip=${\n        (currentPage - 1) * limit\n      }&select=id,thumbnail,title,brand,category,price`\n    );\n    return response.data.products;\n  } catch (error) {\n    throw error;\n  }\n};\n\n//для перевірки роботи функцій:\n// getAllProducts().then(data => console.log('getAllProducts- ', data));\n// getProductsByCategory('smartphones').then(data =>\n//   console.log('getProductsByCategory(\"smartphones\")- ', data)\n// );\n// getProductById(10).then(data => console.log('getProductById(5)- ', data));\n// searchProducts('phone').then(data =>\n//   console.log('searchProducts(\"phone\")- ', data)\n// );\n// getCategoryList().then(data => console.log('getCategoryList- ', data));\n","export default {\n    elCategories: document.querySelector('.categories'),\n    elProducts: document.querySelector('.products'),\n}\n","import refs from './refs.js';\n\nexport function renderCategories(categories) {\n  categories.unshift('All');\n  const markup = categories\n    .map(\n      category => `\n     <li class=\"categories__item\">\n      <button class=\"categories__btn ${category === \"All\" ? 'categories__btn--active' : ''}\" type=\"button\">${category}</button>\n    </li>`\n    )\n    .join('');\n  refs.elCategories.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction murkupProdect(products) {\n  return products\n    .map(\n      ({ id, thumbnail, title, brand, category, price }) => `\n    <li class=\"products__item\" data-id=\"${id}\">\n    <img class=\"products__image\" src=\"${thumbnail}\" alt=\"${title}\"/>\n    <p class=\"products__title\">${title}</p>\n    <p class=\"products__brand\"><span class=\"products__brand--bold\">Brand:${brand}</span></p>\n    <p class=\"products__category\">Category:${category} </p>\n    <p class=\"products__price\">Price: ${price}$</p>\n </li>`\n    )\n    .join('');\n}\nexport function renderProduct(products) {\n  refs.elProducts.insertAdjacentHTML('beforeend', murkupProdect(products));\n}\n","//Логіка сторінки Home\nimport {\n  getAllProducts,\n  getProductsByCategory,\n  getProductById,\n  searchProducts,\n  getCategoryList,\n} from './js/products-api.js';\nimport refs from './js/refs.js';\n\nimport { renderCategories, renderProduct } from './js/render-function.js';\n\nasync function init() {\n  try {\n    const response = await getCategoryList();\n    renderCategories(response);\n    const responseProdacts = await getAllProducts();\n    renderProduct(responseProdacts);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\ninit();\n\nrefs.elCategories.addEventListener('click', triggerCategory);\n\nasync function triggerCategory(e) {\n  e.preventDefault();\n  if (!e.target.classList.contains('categories__btn')) return;\n\n  e.currentTarget\n    .querySelector('.categories__btn--active')\n    .classList.remove('categories__btn--active');\n\n  const button = e.target.closest('.categories__btn');\n  const buttonValue = button.textContent.trim().toLowerCase();\n  button.classList.add('categories__btn--active');\n  refs.elProducts.innerHTML = '';\n\n  try {\n    if (buttonValue !== 'all') {\n      const responseProducts = await getProductsByCategory(buttonValue);\n      renderProduct(responseProducts);\n    } else {\n      const responseProducts = await getAllProducts();\n      renderProduct(responseProducts);\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n"],"names":["limit","requestDummy","axios","getAllProducts","currentPage","error","getCategoryList","getProductsByCategory","category","refs","renderCategories","categories","markup","murkupProdect","products","id","thumbnail","title","brand","price","renderProduct","init","response","responseProdacts","triggerCategory","e","button","buttonValue","responseProducts"],"mappings":"oFAAO,MAAMA,EAAQ,GCGfC,EAAeC,EAAM,OAAO,CAChC,QAAS,gCACX,CAAC,EAGYC,EAAiB,MAAOC,EAAc,IAAM,CACvD,GAAI,CAMF,OALiB,MAAMH,EAAa,IAClC,UAAUD,CAAK,UACZI,EAAc,GAAKJ,CAC5B,iDACA,GACoB,KAAK,QACtB,OAAQK,EAAO,CACd,MAAMA,CACP,CACH,EA8BaC,EAAkB,SAAY,CACzC,GAAI,CAEF,OADiB,MAAML,EAAa,IAAI,gBAAgB,GACxC,IACjB,OAAQI,EAAO,CACd,MAAMA,CACP,CACH,EAIaE,EAAwB,MAAOC,EAAUJ,EAAc,IAAM,CACxE,GAAI,CAMF,OALiB,MAAMH,EAAa,IAClC,aAAaO,CAAQ,UAAUR,CAAK,UACjCI,EAAc,GAAKJ,CAC5B,iDACA,GACoB,KAAK,QACtB,OAAQK,EAAO,CACd,MAAMA,CACP,CACH,ECvEeI,EAAA,CACX,aAAc,SAAS,cAAc,aAAa,EAClD,WAAY,SAAS,cAAc,WAAW,CAClD,ECDO,SAASC,EAAiBC,EAAY,CAC3CA,EAAW,QAAQ,KAAK,EACxB,MAAMC,EAASD,EACZ,IACCH,GAAY;AAAA;AAAA,uCAEqBA,IAAa,MAAQ,0BAA4B,EAAE,mBAAmBA,CAAQ;AAAA,UAEhH,EACA,KAAK,EAAE,EACVC,EAAK,aAAa,mBAAmB,YAAaG,CAAM,CAC1D,CAEA,SAASC,EAAcC,EAAU,CAC/B,OAAOA,EACJ,IACC,CAAC,CAAE,GAAAC,EAAI,UAAAC,EAAW,MAAAC,EAAO,MAAAC,EAAO,SAAAV,EAAU,MAAAW,CAAK,IAAO;AAAA,0CAClBJ,CAAE;AAAA,wCACJC,CAAS,UAAUC,CAAK;AAAA,iCAC/BA,CAAK;AAAA,2EACqCC,CAAK;AAAA,6CACnCV,CAAQ;AAAA,wCACbW,CAAK;AAAA,OAExC,EACA,KAAK,EAAE,CACZ,CACO,SAASC,EAAcN,EAAU,CACtCL,EAAK,WAAW,mBAAmB,YAAaI,EAAcC,CAAQ,CAAC,CACzE,CCnBA,eAAeO,GAAO,CACpB,GAAI,CACF,MAAMC,EAAW,MAAMhB,IACvBI,EAAiBY,CAAQ,EACzB,MAAMC,EAAmB,MAAMpB,IAC/BiB,EAAcG,CAAgB,CAC/B,OAAQlB,EAAO,CACd,QAAQ,IAAIA,EAAM,OAAO,CAC1B,CACH,CACAgB,IAEAZ,EAAK,aAAa,iBAAiB,QAASe,CAAe,EAE3D,eAAeA,EAAgBC,EAAG,CAEhC,GADAA,EAAE,eAAc,EACZ,CAACA,EAAE,OAAO,UAAU,SAAS,iBAAiB,EAAG,OAErDA,EAAE,cACC,cAAc,0BAA0B,EACxC,UAAU,OAAO,yBAAyB,EAE7C,MAAMC,EAASD,EAAE,OAAO,QAAQ,kBAAkB,EAC5CE,EAAcD,EAAO,YAAY,KAAM,EAAC,YAAW,EACzDA,EAAO,UAAU,IAAI,yBAAyB,EAC9CjB,EAAK,WAAW,UAAY,GAE5B,GAAI,CACF,GAAIkB,IAAgB,MAAO,CACzB,MAAMC,EAAmB,MAAMrB,EAAsBoB,CAAW,EAChEP,EAAcQ,CAAgB,CACpC,KAAW,CACL,MAAMA,EAAmB,MAAMzB,IAC/BiB,EAAcQ,CAAgB,CAC/B,CACF,OAAQvB,EAAO,CACd,QAAQ,IAAIA,EAAM,OAAO,CAC1B,CACH"}